"use strict";
(self["webpackChunkeditor"] = self["webpackChunkeditor"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_javascript_javascript_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conf": () => (/* binding */ conf),
/* harmony export */   "language": () => (/* binding */ language)
/* harmony export */ });
/* harmony import */ var _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typescript/typescript.js */ "./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

var conf = _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.conf;
var language = {
    // Set defaultToken to invalid to see what you do not tokenize yet
    defaultToken: 'invalid',
    tokenPostfix: '.js',
    keywords: [
        'break',
        'case',
        'catch',
        'class',
        'continue',
        'const',
        'constructor',
        'debugger',
        'default',
        'delete',
        'do',
        'else',
        'export',
        'extends',
        'false',
        'finally',
        'for',
        'from',
        'function',
        'get',
        'if',
        'import',
        'in',
        'instanceof',
        'let',
        'new',
        'null',
        'return',
        'set',
        'super',
        'switch',
        'symbol',
        'this',
        'throw',
        'true',
        'try',
        'typeof',
        'undefined',
        'var',
        'void',
        'while',
        'with',
        'yield',
        'async',
        'await',
        'of'
    ],
    typeKeywords: [],
    operators: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.operators,
    symbols: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.symbols,
    escapes: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.escapes,
    digits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.digits,
    octaldigits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.octaldigits,
    binarydigits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.binarydigits,
    hexdigits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.hexdigits,
    regexpctl: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.regexpctl,
    regexpesc: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.regexpesc,
    tokenizer: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.tokenizer
};


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX21vbmFjby1lZGl0b3JfZXNtX3ZzX2Jhc2ljLWxhbmd1YWdlc19qYXZhc2NyaXB0X2phdmFzY3JpcHRfanMuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FGO0FBQzlFLFdBQVcsMkRBQU07QUFDakI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUseUVBQW9CO0FBQ25DLGFBQWEsdUVBQWtCO0FBQy9CLGFBQWEsdUVBQWtCO0FBQy9CLFlBQVksc0VBQWlCO0FBQzdCLGlCQUFpQiwyRUFBc0I7QUFDdkMsa0JBQWtCLDRFQUF1QjtBQUN6QyxlQUFlLHlFQUFvQjtBQUNuQyxlQUFlLHlFQUFvQjtBQUNuQyxlQUFlLHlFQUFvQjtBQUNuQyxlQUFlLHlFQUFvQjtBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL2VkaXRvci8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvamF2YXNjcmlwdC9qYXZhc2NyaXB0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5pbXBvcnQgeyBjb25mIGFzIHRzQ29uZiwgbGFuZ3VhZ2UgYXMgdHNMYW5ndWFnZSB9IGZyb20gJy4uL3R5cGVzY3JpcHQvdHlwZXNjcmlwdC5qcyc7XHJcbmV4cG9ydCB2YXIgY29uZiA9IHRzQ29uZjtcclxuZXhwb3J0IHZhciBsYW5ndWFnZSA9IHtcclxuICAgIC8vIFNldCBkZWZhdWx0VG9rZW4gdG8gaW52YWxpZCB0byBzZWUgd2hhdCB5b3UgZG8gbm90IHRva2VuaXplIHlldFxyXG4gICAgZGVmYXVsdFRva2VuOiAnaW52YWxpZCcsXHJcbiAgICB0b2tlblBvc3RmaXg6ICcuanMnLFxyXG4gICAga2V5d29yZHM6IFtcclxuICAgICAgICAnYnJlYWsnLFxyXG4gICAgICAgICdjYXNlJyxcclxuICAgICAgICAnY2F0Y2gnLFxyXG4gICAgICAgICdjbGFzcycsXHJcbiAgICAgICAgJ2NvbnRpbnVlJyxcclxuICAgICAgICAnY29uc3QnLFxyXG4gICAgICAgICdjb25zdHJ1Y3RvcicsXHJcbiAgICAgICAgJ2RlYnVnZ2VyJyxcclxuICAgICAgICAnZGVmYXVsdCcsXHJcbiAgICAgICAgJ2RlbGV0ZScsXHJcbiAgICAgICAgJ2RvJyxcclxuICAgICAgICAnZWxzZScsXHJcbiAgICAgICAgJ2V4cG9ydCcsXHJcbiAgICAgICAgJ2V4dGVuZHMnLFxyXG4gICAgICAgICdmYWxzZScsXHJcbiAgICAgICAgJ2ZpbmFsbHknLFxyXG4gICAgICAgICdmb3InLFxyXG4gICAgICAgICdmcm9tJyxcclxuICAgICAgICAnZnVuY3Rpb24nLFxyXG4gICAgICAgICdnZXQnLFxyXG4gICAgICAgICdpZicsXHJcbiAgICAgICAgJ2ltcG9ydCcsXHJcbiAgICAgICAgJ2luJyxcclxuICAgICAgICAnaW5zdGFuY2VvZicsXHJcbiAgICAgICAgJ2xldCcsXHJcbiAgICAgICAgJ25ldycsXHJcbiAgICAgICAgJ251bGwnLFxyXG4gICAgICAgICdyZXR1cm4nLFxyXG4gICAgICAgICdzZXQnLFxyXG4gICAgICAgICdzdXBlcicsXHJcbiAgICAgICAgJ3N3aXRjaCcsXHJcbiAgICAgICAgJ3N5bWJvbCcsXHJcbiAgICAgICAgJ3RoaXMnLFxyXG4gICAgICAgICd0aHJvdycsXHJcbiAgICAgICAgJ3RydWUnLFxyXG4gICAgICAgICd0cnknLFxyXG4gICAgICAgICd0eXBlb2YnLFxyXG4gICAgICAgICd1bmRlZmluZWQnLFxyXG4gICAgICAgICd2YXInLFxyXG4gICAgICAgICd2b2lkJyxcclxuICAgICAgICAnd2hpbGUnLFxyXG4gICAgICAgICd3aXRoJyxcclxuICAgICAgICAneWllbGQnLFxyXG4gICAgICAgICdhc3luYycsXHJcbiAgICAgICAgJ2F3YWl0JyxcclxuICAgICAgICAnb2YnXHJcbiAgICBdLFxyXG4gICAgdHlwZUtleXdvcmRzOiBbXSxcclxuICAgIG9wZXJhdG9yczogdHNMYW5ndWFnZS5vcGVyYXRvcnMsXHJcbiAgICBzeW1ib2xzOiB0c0xhbmd1YWdlLnN5bWJvbHMsXHJcbiAgICBlc2NhcGVzOiB0c0xhbmd1YWdlLmVzY2FwZXMsXHJcbiAgICBkaWdpdHM6IHRzTGFuZ3VhZ2UuZGlnaXRzLFxyXG4gICAgb2N0YWxkaWdpdHM6IHRzTGFuZ3VhZ2Uub2N0YWxkaWdpdHMsXHJcbiAgICBiaW5hcnlkaWdpdHM6IHRzTGFuZ3VhZ2UuYmluYXJ5ZGlnaXRzLFxyXG4gICAgaGV4ZGlnaXRzOiB0c0xhbmd1YWdlLmhleGRpZ2l0cyxcclxuICAgIHJlZ2V4cGN0bDogdHNMYW5ndWFnZS5yZWdleHBjdGwsXHJcbiAgICByZWdleHBlc2M6IHRzTGFuZ3VhZ2UucmVnZXhwZXNjLFxyXG4gICAgdG9rZW5pemVyOiB0c0xhbmd1YWdlLnRva2VuaXplclxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=